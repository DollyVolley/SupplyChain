+ Backlog +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

add import_asset_controller

refactor: Controller

add cancel_pending_request method

add sim_mode_auto_cancel
  new_modules:
    cancel_request_controller
    listen_on_asset // we know every address in advance
      listen_on_address

add sim_mode_dry // make dry simulation mode without actual transactions

add mam_mode_private

add user story
  LAYER_2:
  As a user I want to receive a asset by just providing a reference, so that i dont spend time with the overhead (create, copy, select)
  supply_chain_layer_2: request_asset_controller
  existing_modules:
    create_twin_controller
    request_asset_controller

develop epic
  LAYER_2 Management Interface
  As a user I want the tools highly abstracted, in order to work effectively.
  new_module_set second_layer_controller
    request_asset_controller
    auto_cancel_mode



# Research +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

handle network upgrade (R.I.P. Client Libs, Hallelujah Chrysalis)

add mam_mode_restricted
  necessary refactors and implementations



+ UI Ideas +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

add UI sim_hover_dom
  :hover -> show information how this would be done in production

add UI edu_hover_dom
  :hover -> provide in-depth knowedge what the people can see here.



+ NOTES SCRATCHBOOK ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
supply chain client specification
Asset [Local Twin / Twin Listener]

supply chain core specification

 ChannelTypes
 A) Asset
    Representation of real world assets (Physical Assets, Documents, Contracts, ...)

 B) Disposition [Private / Public] [ Asset Stream / Template Stream / Disposition List / Communication List]
    Organisation of multiple channels (Production, Quality Control, Procurement, Selling, Templates, Internal Structures, ...)

 C) Communication [Restricted / Public] [Decision Proposal / Decision, ...]
    Private or public stream of messages (Negotiation, Announcements, ...)


Local Twin -> twin is currently not owned, just representation
Twin Listener -> twin is not owned, Channel with listener controller.

Template -> a base object inherited by specified new assets, CRUD Methods

Private -> structure encrypted processes and organizational groups, resource and decision flow based on data
Restricted -> messenging with sidekey owned by two or more parties,
Public -> structure processes and expand to other com expose additional services / APIs


*General*
- create<ChannelType> ()

- attach


*Asset*

- create

- create_from_template (template_id)
    link new created asset from template

- request_asset (root)

- attach
    add data / measurements to asset

- integrate
    bind multiple owned assets to a single one

- transfer_request
    request ownership of an asset

- transfer
    transfer ownership of an asset


